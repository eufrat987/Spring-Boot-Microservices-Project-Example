version: "3.0"

services:

  api-gateway:
    build:
      context: api-gateway
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    ports:
      - "8080:8080"
    depends_on:
      - discovery-service

  discovery-service:
    build:
      context: discovery-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin-tracing

  inventory-service:
    build:
      context: inventory-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-service
      - inventory-mysql
      - api-gateway

  notification-service:
    build:
      context: notification-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-service
      - api-gateway

  order-service:
    build:
      context: order-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-service
      - api-gateway
      - order-mysql

  product-service:
    build:
      context: product-service
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - discovery-service
      - api-gateway
      - product-mongodb

  product-mongodb:
    image: mongo:8.0.14-rc1-noble
    ports:
      - "27017:27017"
  order-mysql:
    image: mysql:9.4.0-oraclelinux9
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: order-service
  inventory-mysql:
    image: mysql:9.4.0-oraclelinux9
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: inventory-service

  keycloak-auth:
    image: quay.io/keycloak/keycloak:26.3.4
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
    ports:
      - "8181:8181"
    command: start-dev --http-port=8181 --import-realm
    volumes:
      - keycloak:/opt/keycloak/data/
      - ./realm:/opt/keycloak/data/import

  zipkin-tracing:
    image: openzipkin/zipkin:3
    ports:
      - "9411:9411"


  kafka1:
    image: apache/kafka:4.1.0
    container_name: kafka1
    ports:
      - "9092:9092"     # EXTERNAL broker port (Spring Boot access)
      - "19092:19092"   # INTERNAL broker port (Kafka internal communication)
      - "9093:9093"     # CONTROLLER port
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://0.0.0.0:9092,CONTROLLER://kafka1:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9094,3@kafka3:9096
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs

  kafka2:
    image: apache/kafka:4.1.0
    container_name: kafka2
    ports:
      - "9095:9095"     # EXTERNAL broker port (Spring Boot access)
      - "19093:19093"   # INTERNAL broker port (Kafka internal communication)
      - "9094:9094"     # CONTROLLER port
    environment:
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://0.0.0.0:9095,CONTROLLER://kafka2:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka2:19093,EXTERNAL://localhost:9095
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9094,3@kafka3:9096
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs

  kafka3:
    image: apache/kafka:4.1.0
    container_name: kafka3
    ports:
      - "9097:9097"     # EXTERNAL broker port (Spring Boot access)
      - "19094:19094"   # INTERNAL broker port (Kafka internal communication)
      - "9096:9096"     # CONTROLLER port
    environment:
      KAFKA_NODE_ID: 3
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://0.0.0.0:9097,CONTROLLER://kafka3:9096
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka3:19094,EXTERNAL://localhost:9097
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka1:9093,2@kafka2:9094,3@kafka3:9096
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs

  prometheus:
    image: prom/prometheus:v3.5.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - product-service
      - inventory-service
      - order-service
      - notification-service

  grafana:
    image: bitnami/grafana:12
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin


volumes:
  keycloak:
